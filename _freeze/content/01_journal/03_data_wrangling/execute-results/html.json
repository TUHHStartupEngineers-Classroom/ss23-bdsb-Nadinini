{
  "hash": "1909d391f49cef7fb8b7e7f8b774e56b",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Nadine Hartlef\"\n---\n\n# Libraries\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_dab83e3f6969409ec97d4ce6f83471cf'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(vroom)\nlibrary(data.table)\n```\n:::\n\n# First steps\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-2_f15fbbded99ef35930fb11cce108c8ab'}\n\n```{.r .cell-code}\ncol_types_patent <- list(\n  id = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  num_claims = col_double()\n)\n\npatent_tbl <- vroom(\n  file       = \"C:\\\\Users\\\\nadin\\\\Documents\\\\GitHub\\\\ss23-bdsb-Nadinini\\\\content\\\\01_journal\\\\Patent_data\\\\patent.tsv\", \n  delim      = \"\\t\", \n  col_names  = names(col_types_patent),\n  col_types  = col_types_patent,\n  na         = c(\"\", \"NA\", \"NULL\")\n) %>%\n  slice(2:nrow(.))\n\ncol_types_patent_assignee <- list(\n  patent_id = col_character(),\n  assignee_id = col_character()\n)\n\n\npatent_assignee_tbl <- vroom(\n  file       = \"C:\\\\Users\\\\nadin\\\\Documents\\\\GitHub\\\\ss23-bdsb-Nadinini\\\\content\\\\01_journal\\\\Patent_data\\\\patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_names  = names(col_types_patent_assignee),\n  col_types  = col_types_patent_assignee,\n  na         = c(\"\", \"NA\", \"NULL\")\n) %>%\n  slice(2:nrow(.))\n\ncol_types_assignee <- list(\n  id = col_character(),\n  type = col_integer(),\n  organization = col_character()\n)\n\n\nassignee_tbl <- vroom(\n  file       = \"C:\\\\Users\\\\nadin\\\\Documents\\\\GitHub\\\\ss23-bdsb-Nadinini\\\\content\\\\01_journal\\\\Patent_data\\\\assignee.tsv\", \n  delim      = \"\\t\", \n  col_names  = names(col_types_assignee),\n  col_types  = col_types_assignee,\n  na         = c(\"\", \"NA\", \"NULL\")\n)%>%\n  slice(2:nrow(.))\n\ncol_types_uspc <- list(\n  patent_id = col_character(),\n  mainclass_id = col_integer(),\n  sequence = col_integer()\n)\n\n\nuspc_tbl <- vroom(\n  file       = \"C:\\\\Users\\\\nadin\\\\Documents\\\\GitHub\\\\ss23-bdsb-Nadinini\\\\content\\\\01_journal\\\\Patent_data\\\\uspc.tsv\", \n  delim      = \"\\t\", \n  col_names  = names(col_types_uspc),\n  col_types  = col_types_uspc,\n  na         = c(\"\", \"NA\", \"NULL\")\n)%>%\n  slice(2:nrow(.))\n```\n:::\n\n# Analysis (Alternative 2)\n## First part\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-3_3c361916be13a8d122dd04340d4b1453'}\n\n```{.r .cell-code}\n#part 1 of the challenge\n\ndata_pt1_joined <- left_join(assignee_tbl,patent_assignee_tbl,by = c(\"id\"=\"assignee_id\"))\n\ndata_pt1_US <- data_pt1_joined %>%\n  data.table() %>%\n  .[type == 2]\npatent_numbers <- data_pt1_US[,.N,by = list(id,organization)][\n  ,.(organization,id,patents = N)][\n  order(patents,decreasing = TRUE )]\n\ncat(\"Company/Organization with the most patents: \",patent_numbers[\n  1,organization],\"with \",patent_numbers[1,patents],\"patents\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Company/Organization with the most patents:  International Business Machines Corporation with  7547 patents\n```\n:::\n\n```{.r .cell-code}\n#10 US Companies with the most assigned/granted patents\nprint(patent_numbers[1:10,list(organization,patents),])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                    organization patents\n#>  1: International Business Machines Corporation    7547\n#>  2:                       Microsoft Corporation    3165\n#>  3:                                 Google Inc.    2668\n#>  4:                       QUALCOMM Incorporated    2597\n#>  5:                                  Apple Inc.    2201\n#>  6:                    General Electric Company    1873\n#>  7:   Hewlett-Packard Development Company, L.P.    1638\n#>  8:          AT&T INTELLECTUAL PROPERTY I, L.P.    1625\n#>  9:                           Intel Corporation    1616\n#> 10:         GM Global Technology Operations LLC    1533\n```\n:::\n:::\n\n## Second part\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-4_f321c73c12e8bbe274493dec796de464'}\n\n```{.r .cell-code}\n# part 2 of the challenge\n\ndata_pt2_joined <- left_join(data_pt1_joined,patent_tbl,by = c(\"patent_id\"=\"id\"))\n# since patent_tbl contains patent ids, that have no assigned organization or matching\n# assignee id in the patent_assignee list and we search for organizations, left_join()\n# is performed in this order, so the result only contains patent ids that are assigned to \n# an organization\n\ndata_pt2_august_US <-data_pt2_joined %>%\n  data.table() %>%\n  .[type == 2 & month(date)==8]\n\npatent_numbers_august <- data_pt2_august_US[,.N,by = list(id,organization)][\n  ,.(organization,id,patents = N)][\n    order(patents,decreasing = TRUE )]\n\ncat(\"Company/Organization with the most patents in August 2014: \",patent_numbers_august[\n  1,organization],\"with \",patent_numbers_august[1,patents],\"patents\" )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Company/Organization with the most patents in August 2014:  International Business Machines Corporation with  718 patents\n```\n:::\n\n```{.r .cell-code}\n#10 US Companies with the most assigned/granted patents in August 2014:\nprint(patent_numbers_august[1:10,list(organization,patents),])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                    organization patents\n#>  1: International Business Machines Corporation     718\n#>  2:                       Microsoft Corporation     337\n#>  3:                                 Google Inc.     240\n#>  4:                       QUALCOMM Incorporated     223\n#>  5:                                  Apple Inc.     222\n#>  6:                           Intel Corporation     159\n#>  7:                    General Electric Company     148\n#>  8:          AT&T INTELLECTUAL PROPERTY I, L.P.     146\n#>  9:   Hewlett-Packard Development Company, L.P.     140\n#> 10:         GM Global Technology Operations LLC     138\n```\n:::\n:::\n\n## Third part\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-5_a4c7f5e4fbedd8d91fb8fefb004216cc'}\n\n```{.r .cell-code}\n#part 3 of the challenge\nuspc_data_tbl <-uspc_tbl %>% select(patent_id,mainclass_id) %>%\n  unique() %>% data.table()\n\ndata_pt3_joined <- left_join(uspc_data_tbl,data_pt1_joined,\n                             by = c(\"patent_id\"=\"patent_id\"))%>%\n      .[!is.na(organization)]\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in left_join(uspc_data_tbl, data_pt1_joined, by = c(patent_id = \"patent_id\")): Detected an unexpected many-to-many relationship between `x` and `y`.\n#> ℹ Row 16 of `x` matches multiple rows in `y`.\n#> ℹ Row 216013 of `y` matches multiple rows in `x`.\n#> ℹ If a many-to-many relationship is expected, set `relationship =\n#>   \"many-to-many\"` to silence this warning.\n```\n:::\n\n```{.r .cell-code}\n   #take all assigned patents regarding tech classes and subtract the ones that cannot\n  # be evaluated since no organization is assigned to them\n\n\ndata_pt3_world <- data_pt1_joined %>%\n  data.table() %>%\n  .[type == 2| type == 3]\n\npatent_numbers_world <- data_pt3_world[,.N,by = list(id,organization)][\n  ,.(organization,id,patents = N)][\n    order(patents,decreasing = TRUE )]\n\ntop_10_organizations <-patent_numbers_world[1:10,list(organization),]\n\ntech_classes <- data_pt3_joined %>% \n  filter(organization %in% top_10_organizations$organization) %>%\n  .[,.N,by = (mainclass_id)] %>%\n  .[,.(mainclass_id,patents = N)] %>%\n  .[order(patents,decreasing = TRUE )] \n\n# Top 5 tech main classes:\nprint(tech_classes[1:5])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>    mainclass_id patents\n#> 1:          257    2790\n#> 2:          370    2528\n#> 3:          455    2453\n#> 4:          709    1981\n#> 5:          348    1875\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}