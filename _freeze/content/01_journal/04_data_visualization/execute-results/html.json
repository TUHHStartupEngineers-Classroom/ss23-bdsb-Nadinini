{
  "hash": "460baa94947408f30d80eab18fbeb0fb",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Nadine Hartlef\"\n---\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_74f10f1d77e4a7120600f47cf34e267e'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(zoo)\nlibrary(lubridate)\nlibrary(maps)\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 313070 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n# Time course of the cumulative Covid-19 cases\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_33447ee0a1070fbe27f40ec7c833b6e6'}\n\n```{.r .cell-code}\n#challenge part 1\ncovid_data_pt1 <- tibble(location = covid_data_tbl$location,\n                         date = covid_data_tbl$date,\n                         total_cases = covid_data_tbl$total_cases)\n#edit data\ncovid_data_plot <- covid_data_pt1 %>% \n  filter(location %in% c(\"Germany\",\"France\",\"Spain\",\"Germany\",\"United Kingdom\",\"United States\",\"Europe\")) %>%\nfilter(!is.na(total_cases))\n\ncovid_dates <- covid_data_plot$date %>%\n  sort() \ncurrent_date <- covid_dates%>% tail(n=1)\nlabel_dates <- covid_dates %>%\n  as.yearmon() %>%\n  unique()\n\n  \n\ncovid_data_plot %>%\nggplot(aes(date, total_cases)) +\n\n  geom_line(aes(color = location), linewidth = 1) + \n  labs(\n    title = \"COVID-19 confirmed cases worldwide\",\n    subtitle = str_glue(\"As of {mday(current_date)}/{month(current_date)}/{year(current_date)}\"),\n    x = \"\",\n    y = \"Cumulative Cases\",\n    color = \"Continent/Country\"\n  )+\n scale_x_continuous(breaks = seq(as.Date(\"2020-01-01\"),by = \"1 month\", length.out = length(label_dates)),\n                    labels = label_dates) +\n  scale_y_continuous(labels = scales::dollar_format(scale  = 1/1e6, \n                                                    prefix = \"\", \n                                                    suffix = \"M\")) +\n  theme_dark()+\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n# The distribution of the mortality rate\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-3_7eeeac15a063cda2a86bf0642a1a63db'}\n\n```{.r .cell-code}\n# Part 2 of the challenge\nworld <- map_data(\"world\")\ncovid_data_world <- covid_data_tbl %>%\n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct() %>%\n  filter(date == current_date)\n\nworld_data <- left_join(world,covid_data_world, by = c(\"region\"=\"location\")) %>%\n  mutate(mortality = total_deaths/population) %>%\n  select(long,lat, region,mortality) \n\n\nids <- world_data %>% select(region,mortality) %>%\n  unique()%>% .$region %>%factor()\nvalues <- data.frame(\n  id = ids,\n  value = world_data %>% select(region,mortality) %>%\n   unique()%>% .$mortality\n)\npositions <- data.frame(\n  id = factor(world_data$region),\n  x = world_data$long,\n  y = world_data$lat\n)\n\n  ggplot(values,aes(fill = value)) +\n  geom_map(aes(map_id = id), map = world) +\n  expand_limits(positions) + \n    labs(\n      title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n      x = \"\",\n      y = \"\",\n      caption = str_glue(\"Date: {mday(current_date)}/{month(current_date)}/{year(current_date)}\")\n    )+\n    theme(\n      axis.text.x = element_blank(),\n      axis.text.y = element_blank())+\n    theme_dark()+\n    scale_x_continuous(labels = rep(\"\", 4), breaks = c(-100,0,100,200))+\n    scale_y_continuous(labels = rep(\"\", 3), breaks = c(-50,0,50))+\n    scale_fill_continuous(name = \"Mortality Rate\",\n                          breaks = c(0.0005,0.001,0.0015,0.002,0.0025),\n                          labels = scales::dollar_format(accuracy = .001,\n                            scale = 100,\n                            prefix = \"\",\n                                                         suffix = \"%\"),\n      low=\"tomato\", high=\"red4\", \n                           guide=\"colorbar\",na.value=\"white\")\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}